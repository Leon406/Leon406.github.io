{"meta":{"title":"Leon's Blog","subtitle":"Stop Stopping","description":"android 移动端开发。","author":"Leon","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"","slug":"git使用规范_2.0","date":"2017-10-15T12:52:33.607Z","updated":"2017-10-15T12:56:01.567Z","comments":true,"path":"2017/10/15/git使用规范_2.0/","link":"","permalink":"http://yoursite.com/2017/10/15/git使用规范_2.0/","excerpt":"","text":"#git 工作流使用规范 0.初始化 一般只执行一次12git initgit remote add origin &lt;repo site&gt; 0.1更换服务器ip 重新连接12git remote remove origingit remote add origin &lt;new repo site&gt; 1.切换分支dev 开发 ( 从 步骤一到步骤五)123git checkout -b dev //dev 自己定义本地分支git add .git commit -m &quot;your comments&quot; 2.开发完成切回master merge123git checkout master //git merge devgit rebase dev ​ 不建议使用merge会自动交叉合并 1Merging 状态 记得重新 add commit 3.将本地master内容推送到服务器 develop分支 (不要省略 :develop )​ 本地commit 3到5次 或者写了100~200行代码时,再执行 ​ 代码运行没有错误再提交 1234git pull -rebase origin developgit merge -no-ff develop //禁用fast-forward, 不会自动合并git push origin master:develop //develop 服务器分支 3.1无法获取时 从服务器分支获取最新数据1git pull origin develop 3.2有冲突,解决后提交,根据提示CONFLICT 找到对应文件并且修改3.3重新提交12345git add .git commit -m &quot;your comments&quot;git push origin master:develop //develop 服务器分支git branch -av // 提交后确认本地与服务器是否为同一版本 4.提交成功后,删除dev分支1git branch -D dev 5.切换分支继续开发1git checkout -b dev 其他: 123456或者 将资源从master copy到 新分支git checkout -b developgit push origin develop 重置远端服务器地址 12345678910111.修改命令 git remote set-url origin [url]例如：Git remote set-url origin https://cy@127.0.0.1:8443/r/TanTan.git或者 2.先删后加git remote rm origingit remote add origin [url]","categories":[],"tags":[]}]}